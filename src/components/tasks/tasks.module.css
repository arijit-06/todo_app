.quickAdd {
  margin-bottom: 2rem;
}

.quickAddButton {
  width: 100%;
  padding: 1rem;
  background-color: var(--bg-primary);
  border: 2px dashed var(--border-secondary);
  border-radius: var(--radius-lg);
  color: var(--text-tertiary);
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-weight: 500;
}

.quickAddButton:hover {
  border-color: var(--primary-500);
  color: var(--primary-600);
  background-color: var(--primary-50);
}

[data-theme="dark"] .quickAddButton:hover {
  background-color: var(--primary-900);
  color: var(--primary-300);
}

.quickAddForm {
  background-color: var(--bg-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-lg);
  padding: 1.5rem;
  box-shadow: var(--shadow-md);
}

.quickAddInput {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  font-size: 1rem;
  margin-bottom: 1rem;
  transition: var(--transition);
}

.quickAddInput:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
}

.quickAddActions {
  display: flex;
  gap: 0.75rem;
}

.quickAddSubmit {
  padding: 0.5rem 1rem;
  background-color: var(--primary-600);
  color: white;
  border: none;
  border-radius: var(--radius-md);
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
}

.quickAddSubmit:hover:not(:disabled) {
  background-color: var(--primary-700);
}

.quickAddSubmit:disabled {
  background-color: var(--gray-400);
  cursor: not-allowed;
}

.quickAddCancel {
  padding: 0.5rem 1rem;
  background-color: transparent;
  color: var(--text-secondary);
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
}

.quickAddCancel:hover {
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
}

.taskItem {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  padding: 1.5rem;
  background-color: var(--bg-primary);
  border: 1px solid var(--border-primary);
  border-left: 4px solid var(--gray-300);
  border-radius: var(--radius-lg);
  transition: var(--transition);
  box-shadow: var(--shadow-sm);
}

.taskItem:hover {
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.taskItem.completed {
  opacity: 0.7;
}

.taskItem.completed .taskTitle {
  text-decoration: line-through;
}

.taskContent {
  flex: 1;
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.checkButton {
  width: 24px;
  height: 24px;
  border: 2px solid var(--border-secondary);
  border-radius: 50%;
  background-color: transparent;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
  flex-shrink: 0;
  margin-top: 0.125rem;
}

.checkButton:hover {
  border-color: var(--primary-500);
  background-color: var(--primary-50);
}

[data-theme="dark"] .checkButton:hover {
  background-color: var(--primary-900);
}

.checkButton .checked {
  color: var(--success);
}

.taskDetails {
  flex: 1;
}

.taskTitle {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 0.5rem 0;
  line-height: 1.4;
}

.taskDescription {
  font-size: 0.875rem;
  color: var(--text-secondary);
  margin: 0 0 0.75rem 0;
  line-height: 1.5;
}

.taskMeta {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
}

.taskTags {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-wrap: wrap;
}

.tag {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--text-tertiary);
  background-color: var(--bg-tertiary);
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-sm);
}

.taskActions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  opacity: 0;
  transition: var(--transition);
}

.taskItem:hover .taskActions {
  opacity: 1;
}

.actionButton {
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  border-radius: var(--radius-md);
  color: var(--text-tertiary);
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
}

.actionButton:hover {
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
}

.deleteButton:hover {
  background-color: #fef2f2;
  color: var(--error);
}

[data-theme="dark"] .deleteButton:hover {
  background-color: #7f1d1d;
}

.taskList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.taskListHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 2rem;
}

.taskListTitle {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
}

.taskCount {
  font-size: 1rem;
  font-weight: 400;
  color: var(--text-tertiary);
  margin-left: 0.5rem;
}

.sortSelect {
  padding: 0.5rem 0.75rem;
  background-color: var(--bg-primary);
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  color: var(--text-primary);
  font-size: 0.875rem;
  cursor: pointer;
  min-width: 150px;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
}

.sortSelect:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
}

.emptyState {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--text-tertiary);
}

.emptyStateMessage {
  font-size: 1.125rem;
  margin-bottom: 0.5rem;
}

.emptyStateSubtext {
  font-size: 0.875rem;
  color: var(--text-tertiary);
}

.loadingSpinner {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 200px;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--bg-tertiary);
  border-top: 3px solid var(--primary-500);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Task Form Styles */
.taskForm {
  background-color: var(--bg-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-lg);
  padding: 2rem;
  box-shadow: var(--shadow-lg);
}

.formGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
}

.formGroupFull {
  grid-column: 1 / -1;
}

.formLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-secondary);
  margin-bottom: 0.5rem;
}

.formInput {
  padding: 0.75rem;
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  font-size: 0.875rem;
  transition: var(--transition);
}

.formInput:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
}

.formTextarea {
  min-height: 100px;
  resize: vertical;
}

.formSelect {
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
}

.formActions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
}

.formButton {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: var(--radius-md);
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
  font-size: 0.875rem;
}

.formButtonPrimary {
  background-color: var(--primary-600);
  color: white;
}

.formButtonPrimary:hover:not(:disabled) {
  background-color: var(--primary-700);
}

.formButtonPrimary:disabled {
  background-color: var(--gray-400);
  cursor: not-allowed;
}

.formButtonSecondary {
  background-color: transparent;
  color: var(--text-secondary);
  border: 1px solid var(--border-secondary);
}

.formButtonSecondary:hover {
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
}

.errorText {
  color: var(--error);
  font-size: 0.75rem;
  margin-top: 0.25rem;
}

@media (max-width: 768px) {
  .taskItem {
    padding: 1rem;
    flex-direction: column;
    align-items: stretch;
  }

  .taskActions {
    opacity: 1;
    justify-content: flex-end;
    margin-top: 1rem;
  }

  .formGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .taskListHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .sortSelect {
    width: 100%;
  }
}

/* Add these styles to your existing tasks.module.css */

.quickAddOptions {
  margin-bottom: 1rem;
}

.dateInputContainer {
  position: relative;
  display: flex;
  align-items: center;
  max-width: 200px;
}

.calendarIcon {
  position: absolute;
  left: 0.75rem;
  color: var(--text-tertiary);
  pointer-events: none;
}

.dateInput {
  width: 100%;
  padding: 0.5rem 0.75rem 0.5rem 2.5rem;
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  font-size: 0.875rem;
  transition: var(--transition);
}

.dateInput:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
}

/* Update existing styles */
.taskListHeader {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 2rem;
}

/* Remove sort select styles since we moved sorting to sidebar */
.sortSelect {
  display: none;
}

@media (max-width: 768px) {
  .dateInputContainer {
    max-width: 100%;
    margin-bottom: 0.5rem;
  }

  .taskListHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
}

/* Glass Quick Add Task */
.quickAdd {
  margin-bottom: 2rem;
}

.quickAddButton {
  width: 100%;
  padding: 1rem;
  background: var(--glass-bg);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  border: 2px dashed var(--glass-border);
  border-radius: var(--radius-xl);
  color: var(--text-tertiary);
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-weight: 500;
  position: relative;
  overflow: hidden;
}

.quickAddButton::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.1) 0%,
    rgba(59, 130, 246, 0.05) 100%
  );
  opacity: 0;
  transition: var(--transition);
  border-radius: var(--radius-xl);
}

.quickAddButton:hover::before {
  opacity: 1;
}

.quickAddButton:hover {
  border-color: rgba(59, 130, 246, 0.4);
  color: var(--primary-400);
  transform: translateY(-2px);
  box-shadow: var(--glass-shadow);
}

.quickAddButton > * {
  position: relative;
  z-index: 1;
}

.quickAddForm {
  background: var(--glass-bg);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-xl);
  padding: 1.5rem;
  box-shadow: var(--glass-shadow);
  position: relative;
}

.quickAddForm::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.08) 0%,
    rgba(255, 255, 255, 0.03) 100%
  );
  border-radius: var(--radius-xl);
  pointer-events: none;
}

.quickAddInput {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(8px);
  color: var(--text-primary);
  font-size: 1rem;
  margin-bottom: 1rem;
  transition: var(--transition);
  position: relative;
  z-index: 1;
}

.quickAddInput::placeholder {
  color: var(--text-tertiary);
}

.quickAddInput:focus {
  outline: none;
  border-color: rgba(59, 130, 246, 0.5);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  background: rgba(255, 255, 255, 0.15);
}

.quickAddOptions {
  margin-bottom: 1rem;
  position: relative;
  z-index: 1;
}

.dateInputContainer {
  position: relative;
  display: flex;
  align-items: center;
  max-width: 200px;
}

.calendarIcon {
  position: absolute;
  left: 0.75rem;
  color: var(--text-tertiary);
  pointer-events: none;
  z-index: 2;
}

.dateInput {
  width: 100%;
  padding: 0.5rem 0.75rem 0.5rem 2.5rem;
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(8px);
  color: var(--text-primary);
  font-size: 0.875rem;
  transition: var(--transition);
}

.dateInput:focus {
  outline: none;
  border-color: rgba(59, 130, 246, 0.5);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  background: rgba(255, 255, 255, 0.15);
}

.quickAddActions {
  display: flex;
  gap: 0.75rem;
  position: relative;
  z-index: 1;
}

.quickAddSubmit {
  padding: 0.75rem 1.5rem;
  background: linear-gradient(
    135deg,
    var(--primary-600) 0%,
    var(--primary-700) 100%
  );
  color: white;
  border: none;
  border-radius: var(--radius-lg);
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.quickAddSubmit:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
}

.quickAddSubmit:disabled {
  background: var(--glass-bg);
  color: var(--text-tertiary);
  cursor: not-allowed;
  box-shadow: none;
}

.quickAddCancel {
  padding: 0.75rem 1.5rem;
  background: var(--glass-bg);
  backdrop-filter: var(--blur);
  color: var(--text-secondary);
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
}

.quickAddCancel:hover {
  background: var(--glass-hover);
  color: var(--text-primary);
  transform: translateY(-1px);
}

/* Glass Task Items */
.taskItem {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  padding: 1.5rem;
  background: var(--glass-bg);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  border: 1px solid var(--glass-border);
  border-left: 4px solid var(--primary-500);
  border-radius: var(--radius-xl);
  transition: var(--transition);
  box-shadow: var(--glass-shadow);
  position: relative;
  overflow: hidden;
  margin-bottom: 1rem;
}

.taskItem::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.06) 0%,
    rgba(255, 255, 255, 0.02) 100%
  );
  pointer-events: none;
  border-radius: var(--radius-xl);
}

.taskItem:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

.taskItem > * {
  position: relative;
  z-index: 1;
}

/* Rest of your existing task styles with glass effects... */
.taskListHeader {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 2rem;
}

.taskListTitle {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.taskCount {
  font-size: 1rem;
  font-weight: 400;
  color: var(--text-tertiary);
  margin-left: 0.5rem;
}

/* Loading and empty states */
.loadingSpinner {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 200px;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--glass-border);
  border-top: 3px solid var(--primary-500);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.emptyState {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--text-tertiary);
}

.emptyStateMessage {
  font-size: 1.125rem;
  margin-bottom: 0.5rem;
  color: var(--text-secondary);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
